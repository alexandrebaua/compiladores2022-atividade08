
Gramática:
---------------------------------------------------------------------------------------------------------
<ALGORITMO>             ::= ALGORITMO CONST_TEXTO <BLOCO_LISTA_DECL_VAR> <BLOCO_LISTA_PROC_FUNC> <BLOCO_PRINCIPAL> PONTO

<BLOCO_LISTA_PROC_FUNC> ::= <BLOCO_LISTA_PROC_FUNC> <BLOCO_PROCEDIMENTO> | <BLOCO_LISTA_PROC_FUNC> <BLOCO_FUNCAO> | <BLOCO_PROCEDIMENTO> | <BLOCO_FUNCAO> | EPSILON
<BLOCO_PROCEDIMENTO>    ::= PROCEDIMENTO ID ABRE_PAR <LISTA_PARAMETROS> FECHA_PAR <BLOCO_LISTA_DECL_VAR> INICIO <LISTA_COMANDOS> FIM PONTO_VIRGULA
<BLOCO_FUNCAO>          ::= FUNCAO ID ABRE_PAR <LISTA_PARAMETROS> FECHA_PAR DOIS_PONTO <TIPO_DADOS_FUNC_RET> <BLOCO_LISTA_DECL_VAR> INICIO <LISTA_COMANDOS> <FUNC_RETORNE> FIM PONTO_VIRGULA

<BLOCO_LISTA_DECL_VAR>  ::= VARIAVEIS <LISTA_DECL_VAR> | EPSILON
<LISTA_DECL_VAR>        ::= <DECL_VAR> | <LISTA_DECL_VAR> <DECL_VAR>
<DECL_VAR>              ::= <LISTA_ID> DOIS_PONTO <TIPO_SIMPLES> PONTO_VIRGULA | ID DOIS_PONTO <TIPO_SIMPLES> PONTO_VIRGULA | ID DOIS_PONTO VETOR ABRE_COL <LISTA_VETOR_FAIXA> FECHA_COL DE <TIPO_SIMPLES> PONTO_VIRGULA
<LISTA_ID>              ::= ID | <LISTA_ID> VIRGULA ID

<TIPO_SIMPLES>          ::= CARACTER | INTEIRO | REAL | LOGICO
<LISTA_VETOR_FAIXA>     ::= CONST_FAIXA_VETOR | <LISTA_VETOR_FAIXA> VIRGULA CONST_FAIXA_VETOR

<LISTA_PARAMETROS>      ::= <DECL_PARAMETRO> | <LISTA_PARAMETROS> PONTO_VIRGULA <DECL_PARAMETRO>
<DECL_PARAMETRO>        ::= <LISTA_PR_ID_VAR> DOIS_PONTO <TIPO_SIMPLES_PARAM>
<LISTA_PR_ID_VAR>       ::= ID | VAR ID | <LISTA_PR_ID_VAR> VIRGULA ID
<TIPO_SIMPLES_PARAM>    ::= CARACTER | INTEIRO | REAL | LOGICO

<TIPO_DADOS_FUNC_RET>   ::= <TIPO_SIMPLES_FUNC_RET> | <TIPO_VETOR_FUNC_RET>
<TIPO_SIMPLES_FUNC_RET> ::= CARACTER | INTEIRO | REAL | LOGICO
<TIPO_VETOR_FUNC_RET>   ::= VETOR ABRE_COL <LISTA_VETOR_FAIXA> FECHA_COL DE <TIPO_SIMPLES_FUNC_RET> 

<FUNC_RETORNE>          ::= RETORNE <FUNC_RET_VAR> PONTO_VIRGULA
<FUNC_RET_VAR>          ::= ID | CONST_INT | CONST_REAL | CONST_TEXTO | <FUNC_RET_VAR> <FUNC_RET_OP> <FUNC_RET_VAR>
<FUNC_RET_OP>           ::= MENOS | MAIS | ASTERISTICO | BARRA | EPSILON

<BLOCO_PRINCIPAL>       ::= <BLOCO_LISTA_DECL_VAR> INICIO <LISTA_COMANDOS> FIM

<LISTA_COMANDOS>        ::=  | EPSILON

<LISTA_COMANDOS>        ::= <CMD_LEIA>
<LISTA_COMANDOS>        ::= <CMD_ESCREVA>


<CMD_ATRIBUICAO>        ::= <CMD_ATRIB_VAR_REC> ATRIBUICAO <LISTA_CMD_ATRIB_VAL> PONTO_VIRGULA
<CMD_ATRIB_VAR_REC>     ::= ID | ID ABRE_COL <LST_ATRIB_VET_INDEX> FECHA_COL
<LISTA_CMD_ATRIB_VAL>   ::= <CMD_ATRIB_VAL> | <LISTA_CMD_ATRIB_VAL> <CMD_ATRIB_OP> <CMD_ATRIB_VAL>
<CMD_ATRIB_VAL>         ::= ID | CONST_TEXTO | <CMD_ATRIB_CONST> | MENOS <CMD_ATRIB_CONST> | ABRE_PAR <LISTA_CMD_ATRIB_VAL> FECHA_PAR | <CMD_ATRIB_FUNC> | <CMD_ATRIB_VET>
<CMD_ATRIB_CONST>       ::= CONST_INT | CONST_REAL
<CMD_ATRIB_OP>          ::= MENOS | MAIS | ASTERISTICO | BARRA | MOD | DIV | EPSILON

------> Precedência: (1º) Operação matemática, (2º) Operação Lógica. Troca para Lógica se iniciar com uma constante lógica (verdadeiro/falso) ou encontrar algum operador relacional (MAIOR | MENOR | MAIOR_IGUAL | MENOR_IGUAL | IGUAL | DIFERENTE).
<CMD_ATRIBUICAO>        ::= <CMD_ATRIB_VAR_REC> ATRIBUICAO <ARGUMENTO_LOGICO> PONTO_VIRGULA
<ARG_LOG_VAR>           ::= <CMD_ATRIB_VAL> | <LISTA_CMD_ATRIB_VAL>
<ARG_LOG_VAR>           ::= <LISTA_CMD_ATRIB_VAL>


<CMD_ATRIB_FUNC>        ::= ID ABRE_PAR <LST_ATRIB_FUNC_PARAM> FECHA_PAR
<LST_ATRIB_FUNC_PARAM>  ::= ID | <LST_ATRIB_FUNC_PARAM> VIRGULA ID | EPSILON

<CMD_ATRIB_VET>         ::= ID ABRE_COL <LST_ATRIB_VET_INDEX> FECHA_COL
<LST_ATRIB_VET_INDEX>   ::= <ATRIB_VET_INDEX_VAL> | <LST_ATRIB_VET_INDEX> <ATRIB_VET_INDEX_OP> <ATRIB_VET_INDEX_VAL> | <LST_ATRIB_VET_INDEX> VIRGULA <ATRIB_VET_INDEX_VAL>
<ATRIB_VET_INDEX_VAL>   ::= ID | CONST_INT
<ATRIB_VET_INDEX_OP>    ::= MENOS | MAIS | ASTERISTICO | BARRA | EPSILON

<CMD_CHAMA_PROC>        ::= ID ABRE_PAR <LST_CHAMA_PROC_PARAM> FECHA_PAR PONTO_VIRGULA
<LST_CHAMA_PROC_PARAM>  ::= ID | <LST_CHAMA_PROC_PARAM> VIRGULA ID


<ARGUMENTO_LOGICO>      ::= <LST_ARG_LOG_COND> | <ARGUMENTO_LOGICO> <ARG_LOG_OP_LOG> <LST_ARG_LOG_COND>
<LST_ARG_LOG_COND>      ::= CONST_LOGICA | <ARG_LOG_VAR> | <ARG_LOG_VAR> <ARG_LOG_OP_REL> <LST_ARG_LOG_VAR2> | <LST_ARG_LOG_VAR1> <ARG_LOG_OP_REL> <LST_ARG_LOG_VAR2> | ABRE_PAR <ARGUMENTO_LOGICO> FECHA_PAR | NAO ABRE_PAR <ARGUMENTO_LOGICO> FECHA_PAR
<LST_ARG_LOG_VAR1>      ::= <ARG_LOG_VAR_CONST> | MENOS <ARG_LOG_VAR_CONST> | <ARG_LOG_VAR> <ARG_LOG_OP_MAT> <ARG_LOG_VAR_EX> | <LST_ARG_LOG_VAR1> <ARG_LOG_OP_MAT> <ARG_LOG_VAR_EX>
<LST_ARG_LOG_VAR2>      ::= <ARG_LOG_VAR_CONST> | MENOS <ARG_LOG_VAR_CONST> | <ARG_LOG_VAR> | <LST_ARG_LOG_VAR2> <ARG_LOG_OP_MAT> <ARG_LOG_VAR_EX> | <LST_ARG_LOG_VAR2> <ARG_LOG_OP_MAT> ABRE_PAR <LST_ARG_LOG_VAR2> FECHA_PAR | ABRE_PAR <LST_ARG_LOG_VAR2> FECHA_PAR
<ARG_LOG_VAR>           ::= ID | ID ABRE_COL <LST_ATRIB_VET_INDEX> FECHA_COL | ID ABRE_PAR <LST_ATRIB_FUNC_PARAM> FECHA_PAR
<ARG_LOG_VAR_CONST>     ::= CONST_INT | CONST_REAL
<ARG_LOG_VAR_EX>        ::= <ARG_LOG_VAR> | <ARG_LOG_VAR_CONST> | MENOS <ARG_LOG_VAR_CONST>
<ARG_LOG_OP_REL>        ::= MAIOR | MENOR | MAIOR_IGUAL | MENOR_IGUAL | IGUAL | DIFERENTE
<ARG_LOG_OP_MAT>        ::= MENOS | MAIS | ASTERISTICO | BARRA | MOD | DIV
<ARG_LOG_OP_LOG>        ::= E | OU

<LISTA_COMANDOS> -> <CMD_SEL_IF> .
<LISTA_COMANDOS> -> <LISTA_COMANDOS> <CMD_SEL_IF> .
<CMD_SEL_IF> ::= SE <ARGUMENTO_LOGICO> ENTAO <LISTA_COMANDOS> <CMD_SEL_IF_BLOCO_ELSE> FIM_SE PONTO_VIRGULA
<CMD_SEL_IF_BLOCO_ELSE> ::= SENAO <LISTA_COMANDOS> | EPSILON

<LISTA_COMANDOS> -> <CMD_REP_ENQUANTO> .
<LISTA_COMANDOS> -> <LISTA_COMANDOS> <CMD_REP_ENQUANTO> .
<CMD_REP_ENQUANTO> -> ENQUANTO <ARGUMENTO_LOGICO> FACA <LISTA_COMANDOS> FIM_ENQUANTO PONTO_VIRGULA

<LISTA_COMANDOS> -> <CMD_REP_REPITA> .
<LISTA_COMANDOS> -> <LISTA_COMANDOS> <CMD_REP_REPITA> .
<CMD_REP_REPITA> -> REPITA <LISTA_COMANDOS> ATE QUE <ARGUMENTO_LOGICO> PONTO_VIRGULA

<LISTA_COMANDOS> -> <CMD_REP_PARA> .
<LISTA_COMANDOS> -> <LISTA_COMANDOS> <CMD_REP_PARA> .
<CMD_REP_PARA> -> PARA ID ATRIBUICAO <LISTA_CMD_ATRIB_VAL> <CMD_REP_PARA_MODO> <LISTA_CMD_ATRIB_VAL> FACA <LISTA_COMANDOS> FIM_PARA PONTO_VIRGULA
<CMD_REP_PARA_MODO> -> ATE | DECRESCENTE ATE

<CMD_LEIA>              ::= LEIA ABRE_PAR <LISTA_CMD_LEIA_VAR> FECHA_PAR PONTO_VIRGULA
<LISTA_CMD_LEIA_VAR>    ::= <CMD_LEIA_VAR> | <LISTA_CMD_LEIA_VAR> VIRGULA <CMD_LEIA_VAR>
<CMD_LEIA_VAR>          ::= ID | ID ABRE_COL <LST_ATRIB_VET_INDEX> FECHA_COL

<CMD_ESCREVA>           ::= ESCREVA ABRE_PAR <LISTA_IMP_CMD_ESCREVA> FECHA_PAR PONTO_VIRGULA
<CMD_ESCREVALN>         ::= ESCREVALN ABRE_PAR <LISTA_IMP_CMD_ESCREVA> FECHA_PAR PONTO_VIRGULA
<LISTA_IMP_CMD_ESCREVA> ::= CONST_TEXTO | <CMD_ESCREVA_VAR> | <LISTA_IMP_CMD_ESCREVA> VIRGULA CONST_TEXTO | <LISTA_IMP_CMD_ESCREVA> VIRGULA <CMD_ESCREVA_VAR>
<CMD_ESCREVA_VAR>       ::= CONST_INT | CONST_REAL | ID | ID ABRE_COL <LST_ATRIB_VET_INDEX> FECHA_COL | ID ABRE_PAR <LST_ATRIB_FUNC_PARAM> FECHA_PAR | <CMD_ESCREVA_VAR> <CMD_ESCREVA_OP> <CMD_ESCREVA_VAR>
<CMD_ESCREVA_OP>        ::= MENOS | MAIS | ASTERISTICO | BARRA



: <> ::= 

se v[i] mod 2 = 0 então...
se (n mod 2 = 0) então...
enquanto não (soma >= 100) e não (impar = 5) então...
enquanto (soma < 100) e (impar <5) então...
enquanto não (soma >= 100 ou impar = 5) então...


: <LISTA_CMD_ATRIB_VAL> -> <LISTA_CMD_ATRIB_TEXTO>
: <LISTA_CMD_ATRIB_TEXTO> -> CONST_TEXTO
: <LISTA_CMD_ATRIB_TEXTO> -> <LISTA_CMD_ATRIB_TEXTO> MAIS CONST_TEXTO


<CMD_ATRIBUICAO>        ::= <CMD_ATRIB_VAR_REC> ATRIBUICAO <LISTA_CMD_ATRIB_VAL> PONTO_VIRGULA
<CMD_ATRIB_VAR_REC>     ::= ID | ID ABRE_COL <LST_ATRIB_VET_INDEX> FECHA_COL
<LISTA_CMD_ATRIB_VAL>   ::= <CMD_ATRIB_VAL> | <LISTA_CMD_ATRIB_VAL> <CMD_ATRIB_OP> <CMD_ATRIB_VAL>
<CMD_ATRIB_VAL>         ::= ID | <CMD_ATRIB_CONST> | MENOS <CMD_ATRIB_CONST> | ABRE_PAR <LISTA_CMD_ATRIB_VAL> FECHA_PAR | <CMD_ATRIB_FUNC> | <CMD_ATRIB_VET>
<CMD_ATRIB_CONST>       ::= CONST_INT | CONST_REAL
<CMD_ATRIB_OP>          ::= MENOS | MAIS | ASTERISTICO | BARRA | MOD | DIV | EPSILON

<CMD_ATRIBUICAO>        ::= <CMD_ATRIB_VAR_REC> ATRIBUICAO <LISTA_CMD_ATRIB_MAT> PONTO_VIRGULA
<LISTA_CMD_ATRIB_MAT>   ::= <CMD_ATRIB_MAT> | <LISTA_CMD_ATRIB_MAT> <CMD_ATRIB_OP> <CMD_ATRIB_MAT>
<CMD_ATRIB_MAT>         ::= ID | <CMD_ATRIB_CONST> | MENOS <CMD_ATRIB_CONST> | ABRE_PAR <LISTA_CMD_ATRIB_MAT> FECHA_PAR | <CMD_ATRIB_FUNC> | <CMD_ATRIB_VET>
<CMD_ATRIB_CONST>       ::= CONST_INT | CONST_REAL
<CMD_ATRIB_OP>          ::= MENOS | MAIS | ASTERISTICO | BARRA | MOD | DIV | EPSILON

<CMD_ATRIBUICAO>        ::= <CMD_ATRIB_VAR_REC> ATRIBUICAO <ARGUMENTO_LOGICO> PONTO_VIRGULA
<ARG_LOG_VAR>           ::= <CMD_ATRIB_VAL> | <LISTA_CMD_ATRIB_VAL>
<ARG_LOG_VAR>           ::= <LISTA_CMD_ATRIB_VAL>

<CMD_ATRIBUICAO>        ::= <CMD_ATRIB_VAR_REC> ATRIBUICAO <LISTA_CMD_ATRIB_TEXTO> PONTO_VIRGULA
<LISTA_CMD_ATRIB_TEXTO> ::= <CMD_ATRIB_TEXTO> | <LISTA_CMD_ATRIB_TEXTO> MAIS <CMD_ATRIB_TEXTO>
<CMD_ATRIB_TEXTO>       ::= ID | CONST_TEXTO | <CMD_ATRIB_FUNC> | <CMD_ATRIB_VET>


 | 


 
Conjuntos de FIRSTs:
--------------------------------------------------------------------------------------------------------
FIRST(ALGORITMO) = {ID}

FIRST(BLOCO_LISTA_PROC_FUNC) = {PROCEDIMENTO, FUNCAO}
FIRST() = {}
FIRST() = {}

FIRST(BLOCO_LISTA_DECL_VAR) = {VARIAVEIS, EPSILON}
FIRST() = {}
FIRST() = {}
FIRST() = {}
FIRST() = {}
FIRST() = {}

Conjunto de FOLLOWs:
--------------------------------------------------------------------------------------------------------
FOLLOW(ALGORITMO) = {$}

FOLLOW(BLOCO_LISTA_PROC_FUNC) = {}
FOLLOW() = {}
FOLLOW() = {}

FOLLOW(BLOCO_LISTA_DECL_VAR) = FIRST(BLOCO_LISTA_PROC_FUNC) = {PROCEDIMENTO, FUNCAO, INICIO, EPSILON}
FOLLOW() = {}
FOLLOW() = {}
FOLLOW() = {}
FOLLOW() = {}
